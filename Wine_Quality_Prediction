
# Import the required libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics
from scipy import stats


# Read the CSV file
file_path = 'C:\SARTHAK\WineQuality\winequality-red.csv'
data = pd.read_csv(file_path)


data.head(10)


# Plotting the correlation heatmap
plt.figure(figsize=(30, 20))
corr = data.corr()
sns.heatmap(corr, annot=True)
plt.title('Correlation Heatmap')
plt.show()


# Removing outliers using z-score
z = np.abs(stats.zscore(data))
new_data = data[(z < 3).all(axis=1)]


# Splitting the data into features (x) and target (y)
x = new_data.drop(columns='quality')
y = new_data['quality']


# Splitting the data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)


# Fitting the Random Forest Classifier
rf_classificationModel = RandomForestClassifier(n_estimators=100)
rf_classificationModel.fit(x_train, y_train)


# Making predictions
y_pred = rf_classificationModel.predict(x_test)


# Calculating accuracy score
accuracy_score_decimal = metrics.accuracy_score(y_test, y_pred)
accuracy_score_percent = accuracy_score_decimal * 100
print('Accuracy Score:', accuracy_score_percent, '%')

# Visualizing quality distribution
plt.figure(figsize=(10, 6))
sns.countplot(data=new_data, x='quality')
plt.title('Quality Distribution')
plt.xlabel('Quality')
plt.ylabel('Count')
plt.show()


# Plotting Confusion Matrix
confusion_matrix = metrics.confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(confusion_matrix, annot=True, cmap='Blues', fmt='g')
plt.title('Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()


import seaborn as sns
import matplotlib.pyplot as plt


# Assuming 'new_data' is already defined
# Selecting relevant columns for the box plot
selected_columns = ['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar', 
                    'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density', 
                    'pH', 'sulphates', 'alcohol']


# Create a box plot
plt.figure(figsize=(12, 8))
sns.boxplot(data=new_data[selected_columns], orient="v", palette="Set2")
plt.title("Box Plot of Wine Features")
plt.ylabel("Value")
plt.xticks(rotation=270)
plt.show()


print('Accuracy Score:', accuracy_score_percent, '%')
